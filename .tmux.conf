# Use Cntrl-a as prefix and free Cntrl-b
set -g prefix C-a
unbind C-b

# reload config
bind r source ~/.tmux.conf \; display-message "reloaded..."

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# Resize Panes
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# STATUS
set -g status-left '#[fg=black][#S] '
set -g status-right "[ \"#{=21:pane_title}\" | %H:%M | %d/%b/%y ] "
set -g status-fg white
set -g status-bg colour240

# Vim style move on copy mode
set -g status-keys vi
setw -g mode-keys vi

# Faster key repetition
set -s escape-time 0

# COLORS
set -g default-terminal "screen-256color"

# Panes
set -g pane-border-fg default
set -g pane-border-bg default
set -g pane-active-border-fg green
set -g pane-active-border-bg default

# WINDOWS
# window list
setw -g window-status-fg colour246 # grey
setw -g window-status-bg colour240
setw -g window-status-attr none
setw -g window-status-format "#[fg=colour172]#I#[fg=black] #W #[fg=white]|"
# active window
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright
setw -g window-status-current-format " #[fg=colour172]#I#[fg=white] #W#F"
# window activity
setw -g window-status-activity-fg colour246 # grey
setw -g window-status-activity-bg black

# set window split
bind-key v split-window -v -c "#{pane_current_path}"
bind-key b split-window -h -c "#{pane_current_path}"

# Automatic window naming
#setw -g automatic-rename
set-option -g allow-rename off

# constrain window size to max size of any client connected
setw -g aggressive-resize on

# movement of windows
bind -r < swap-window -t -1
bind -r > swap-window -t +1

# create a new window starting in current directory
bind C new-window -c "#{pane_current_path}"

##### macOS bindings ####
# Resize Panes
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1


